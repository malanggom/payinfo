{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"ag-theme-quartz search-result\",\n  style: {\n    \"width\": \"100%\",\n    \"height\": \"90%\"\n  }\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"error-message\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ag_grid_vue = _resolveComponent(\"ag-grid-vue\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_ag_grid_vue, {\n    class: \"search-result-data\",\n    style: {\n      \"width\": \"100%\",\n      \"height\": \"100%\"\n    },\n    columnDefs: $setup.columnDefs,\n    gridOptions: $setup.gridOptions,\n    onGridReady: _ctx.onGridReady\n  }, null, 8 /* PROPS */, [\"columnDefs\", \"gridOptions\", \"onGridReady\"]), $setup.errorMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _toDisplayString($setup.errorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","style","key","_createElementBlock","_hoisted_1","_createVNode","_component_ag_grid_vue","columnDefs","$setup","gridOptions","onGridReady","_ctx","errorMessage","_hoisted_2","_toDisplayString","_createCommentVNode"],"sources":["C:\\Users\\User\\.intelij\\payinfo\\frontend\\src\\components\\DevInq\\SearchResultComponent.vue"],"sourcesContent":["===========================================================================\r\nSearchResultComponent.vue\r\n===========================================================================\r\n===========================================================================\r\n템플릿 시작\r\n===========================================================================\r\n<template>\r\n  <div class=\"ag-theme-quartz search-result\" style=\"width: 100%; height: 90%;\">\r\n    <ag-grid-vue\r\n        class=\"search-result-data\"\r\n        style=\"width: 100%; height: 100%;\"\r\n        :columnDefs=\"columnDefs\"\r\n        :gridOptions=\"gridOptions\"\r\n        @grid-ready=\"onGridReady\"\r\n    />\r\n    <div v-if=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</div>\r\n  </div>\r\n</template>\r\n===========================================================================\r\n템플릿 종료\r\n===========================================================================\r\n스크립트 시작\r\n===========================================================================\r\n<script>\r\nimport { ref, shallowRef } from \"vue\";\r\nimport { AgGridVue } from \"ag-grid-vue3\";\r\nimport apiClient from '../../axios'; // apiClient를 import\r\n\r\nexport default {\r\n  name: \"SearchResultComponent\",\r\n  components: {\r\n    AgGridVue,\r\n  },\r\n  setup() {\r\n    const gridApi = shallowRef();\r\n    const errorMessage = ref(null);\r\n\r\n    const columnDefs = ref([\r\n      { headerName: \"개발자번호\", field: \"DEV_NO\" },\r\n      { headerName: \"이름\", field: \"NM\" },\r\n      { headerName: \"프로젝트투입상태\", field: \"PJ_INP_STTS\" },\r\n      { headerName: \"계약횟수\", field: \"CTRT_NMTM\" },\r\n      { headerName: \"생년월일\", field: \"BRDT\" },\r\n      { headerName: \"성별\", field: \"GNDR\" },\r\n      { headerName: \"직위\", field: \"JBPS\" },\r\n      { headerName: \"등급\", field: \"GRD\" },\r\n      { headerName: \"총경력기간\", field: \"T_CR_PER\" },\r\n      { headerName: \"병역\", field: \"MS\" },\r\n      { headerName: \"지역\", field: \"RGN\" },\r\n      { headerName: \"휴대전화번호\", field: \"MBL_TELNO\" },\r\n      { headerName: \"이메일\", field: \"EML\" },\r\n      { headerName: \"컨택방법\", field: \"CONTT_MTHD\" },\r\n      { headerName: \"인터뷰요청일\", field: \"NTRV_DMND_DT\" },\r\n      { headerName: \"투입가능일\", field: \"INP_PSBLTY_DT\" },\r\n      { headerName: \"소속회사\", field: \"OGDP_CO\" },\r\n      { headerName: \"일련번호\", field: \"SN\" },\r\n      { headerName: \"3.3%여부\", field: \"WHTAX_YN\" },\r\n      { headerName: \"사업자여부\", field: \"BZMN_YN\" },\r\n      { headerName: \"자사정규직여부\", field: \"KDS_EMP_YN\" },\r\n      { headerName: \"계약회사정규직여부\", field: \"CTRT_CO_EMP_YN\" },\r\n      { headerName: \"대금수령날짜\", field: \"CLCT_PICKUP_DT\" },\r\n      { headerName: \"지급일자\", field: \"GIVE_DT\" },\r\n      { headerName: \"은행\", field: \"BANK\" },\r\n      { headerName: \"계좌번호\", field: \"ACTNO\" },\r\n      { headerName: \"부서\", field: \"DEPT\" },\r\n      { headerName: \"월요청단가\", field: \"MM_DMND_UNTPRC\" },\r\n      { headerName: \"주소\", field: \"ADDR\" },\r\n      { headerName: \"직책\", field: \"JBTTL\" },\r\n      { headerName: \"소개자\", field: \"BRKR\" },\r\n      { headerName: \"카카오톡닉네임\", field: \"KAKAO_NICK\" },\r\n      { headerName: \"계약이력존재여부\", field: \"CTRT_HSTRY_YN\" },\r\n    ]);\r\n\r\n    const defaultColDef = ref({\r\n      flex: 1,\r\n      minWidth: 100,\r\n      sortable: false,\r\n    });\r\n\r\n    const gridOptions = ref({\r\n      rowModelType: 'infinite',\r\n      defaultColDef: defaultColDef.value,\r\n      rowBuffer: 0,\r\n      rowSelection: \"multiple\",\r\n      cacheBlockSize: 100,\r\n      cacheOverflowSize: 2,\r\n      maxConcurrentDatasourceRequests: 1,\r\n      infiniteInitialRowCount: 1000,\r\n      maxBlocksInCache: 10,\r\n      onGridReady: (params) => {\r\n        gridApi.value = params.api; // gridApi 초기화\r\n\r\n        const dataSource = {\r\n          rowCount: undefined, // 무한 스크롤처럼 동작\r\n          getRows: async (params) => {\r\n            try {\r\n              console.log(\"asking for \" + params.startRow + \" to \" + params.endRow);\r\n              const response = await apiClient.get('/dev'); // API 호출\r\n              const rowsThisPage = response.data.slice(params.startRow, params.endRow);\r\n              let lastRow = -1;\r\n              if (response.data.length <= params.endRow) {\r\n                lastRow = response.data.length;\r\n              }\r\n              params.successCallback(rowsThisPage, lastRow);\r\n            } catch (error) {\r\n              console.error('Error fetching data:', error);\r\n              errorMessage.value = '데이터를 가져오는 데 실패했습니다.';\r\n              params.failCallback();\r\n            }\r\n          },\r\n        };\r\n        gridApi.value.setDatasource(dataSource); // gridApi를 통해 데이터 소스 설정\r\n      },\r\n    });\r\n\r\n    return {\r\n      columnDefs,\r\n      gridApi,\r\n      defaultColDef,\r\n      gridOptions,\r\n      errorMessage,\r\n    };\r\n  },\r\n};\r\n</script>\r\n===========================================================================\r\n스크립트 종료\r\n===========================================================================\r\n스타일 시작\r\n===========================================================================\r\n<style>\r\n@import \"ag-grid-community/styles/ag-grid.css\";\r\n@import \"ag-grid-community/styles/ag-theme-quartz.css\";\r\n.search-result {\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n}\r\n.error-message {\r\n  color: red; /* 에러 메시지 색상 설정 */\r\n}\r\n</style>"],"mappings":";;EAOOA,KAAK,EAAC,+BAA+B;EAACC,KAAiC,EAAjC;IAAA;IAAA;EAAA;;;EAP7CC,GAAA;EAe6BF,KAAK,EAAC;;;;uBARjCG,mBAAA,CASM,OATNC,UASM,GARJC,YAAA,CAMEC,sBAAA;IALEN,KAAK,EAAC,oBAAoB;IAC1BC,KAAkC,EAAlC;MAAA;MAAA;IAAA,CAAkC;IACjCM,UAAU,EAAEC,MAAA,CAAAD,UAAU;IACtBE,WAAW,EAAED,MAAA,CAAAC,WAAW;IACxBC,WAAU,EAAEC,IAAA,CAAAD;yEAENF,MAAA,CAAAI,YAAY,I,cAAvBT,mBAAA,CAAuE,OAAvEU,UAAuE,EAAAC,gBAAA,CAArBN,MAAA,CAAAI,YAAY,oBAflEG,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}