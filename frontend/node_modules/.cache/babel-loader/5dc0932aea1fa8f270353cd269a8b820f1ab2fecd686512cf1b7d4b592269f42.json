{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted } from 'vue';\nimport eventbus from '@/eventbus/eventbus';\n\n// 필터 타입에 대한 한글 매핑\n\nexport default {\n  __name: 'SearchFilterBtnComponent',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const filterTypeMap = {\n      contains: '포함',\n      notContains: '포함하지 않음',\n      equals: '같음',\n      notEqual: '같지 않음',\n      startsWith: '시작하는',\n      endsWith: '끝나는',\n      //숫자필터 관련\n      greaterThanOrEqual: '이상',\n      lessThanOrEqual: '이하',\n      inRange: '범위 내'\n    };\n\n    // 필드 이름에 대한 한글 매핑\n    const fieldNameMap = {\n      NM: '이름',\n      AGE: '나이',\n      PJ_INP_STTS: '프로젝트투입상태',\n      CTRT_NMTM: '계약횟수',\n      BRDT: '생년월일',\n      GNDR: '성별',\n      JBPS: '직위',\n      GRD: '등급',\n      T_CR_PER: '총경력기간',\n      RGN: '지역',\n      MBL_TELNO: '휴대전화번호',\n      EML: '이메일',\n      CONTT_MTHD: '컨택방법',\n      NTRV_DMND_DT: '인터뷰요청일',\n      INP_PSBLTY_DT: '투입가능일',\n      OGDP_CO: '소속회사',\n      SN: '일련번호',\n      WHTAX_YN: '3.3%여부',\n      BZMN_YN: '사업자여부',\n      KDS_EMP_YN: '자사정규직여부',\n      CTRT_CO_EMP_YN: '계약회사정규직여부',\n      CLCT_PICKUP_DT: '대금수령날짜',\n      GIVE_DT: '지급일자',\n      BANK: '은행',\n      ACTNO: '계좌번호',\n      DEPT: '부서',\n      MM_DMND_UNTPRC: '월요청단가',\n      ADDR: '주소',\n      JBTTL: '직책',\n      BRKR: '소개자',\n      KAKAO_NICK: '카카오톡닉네임',\n      CTRT_HSTRY_YN: '계약이력존재여부',\n      MS: '병역',\n      MDL: '모델',\n      OS: '운영체제',\n      LANG: '언어',\n      DB: '데이터베이스',\n      TOOL: '툴',\n      FRMW: '프레임워크',\n      LBRR: '라이브러리',\n      CMNCT: '통신',\n      ETC: '기타'\n    };\n    const buttons = ref([]);\n    const updateButtonData = (keyName, type, filter) => {\n      //filterTypeMap은 필터 타입을 한글로 매핑한 객체입니다. || type는 만약 filterTypeMap[type]가 undefined일 경우, 원래의 타입(type)을 그대로 사용하도록 합니다. 즉, 매핑된 값이 없으면 기본 타입을 사용합니다.\n      const displayType = filterTypeMap[type] || type;\n      const displayKeyName = fieldNameMap[keyName] || keyName;\n\n      //지금 추가하려는 버튼과 buttons의 값들을 비교하여 하나라도 중복된 값이 있는 경우\n      const isAlreadyRegistered = buttons.value.some(button => button.keyName === displayKeyName && button.filter === filter && button.type === displayType);\n\n      //중복되지 않는 경우 필터를 버튼으로 추가한다. 중복되는 경우는 생략, 이미 필터값 검증 후 필터 중복 시 updateButtonData 실행되지 않음\n      if (!isAlreadyRegistered) {\n        buttons.value.push({\n          keyName: displayKeyName,\n          type: displayType,\n          filter\n        });\n      }\n    };\n\n    //초기화 버튼\n    const resetKorButton = () => {\n      buttons.value = [];\n    };\n\n    //buttons의 생성된 개수만큼 (button, index) index가 생성되고, 버튼의 x버튼을 누르면 실행되는 removeButton으로 index가 전달된다.\n    const removeButton = index => {\n      const button = buttons.value[index];\n      if (button) {\n        // 필드 이름 매핑을 통해 실제 필터 키로 변환\n        const actualKeyName = Object.keys(fieldNameMap).find(key => fieldNameMap[key] === button.keyName);\n        if (actualKeyName) {\n          // 필터 제거 요청: actualKeyName을 사용하여 필터 제거\n          eventbus.SearchResultEvent.removeFilter(actualKeyName, button.type, button.filter); // 필터 제거 이벤트 발생\n\n          // buttons 배열에서 해당 버튼 제거\n          buttons.value.splice(index, 1);\n        }\n      }\n    };\n\n    // 필터 버튼 삭제 핸들러\n    const handleRemoveFilter = keyName => {\n      const buttonIndex = buttons.value.findIndex(button => button.keyName === fieldNameMap[keyName]);\n      if (buttonIndex !== -1) {\n        buttons.value.splice(buttonIndex, 1);\n        console.log(`버튼 '${keyName}' 삭제됨`);\n      }\n    };\n\n    // 이벤트 리스너 등록\n    onMounted(() => {\n      eventbus.SearchResultEvent.add('filterUpdate', updateButtonData);\n      eventbus.SearchResultEvent.add('resetKorButton', resetKorButton); // resetKorButton 이벤트 등록\n      eventbus.SearchResultEvent.add('removeFilter', handleRemoveFilter); // 버튼 삭제 핸들러 등록\n    });\n    const __returned__ = {\n      filterTypeMap,\n      fieldNameMap,\n      buttons,\n      updateButtonData,\n      resetKorButton,\n      removeButton,\n      handleRemoveFilter,\n      ref,\n      onMounted,\n      get eventbus() {\n        return eventbus;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","eventbus","filterTypeMap","contains","notContains","equals","notEqual","startsWith","endsWith","greaterThanOrEqual","lessThanOrEqual","inRange","fieldNameMap","NM","AGE","PJ_INP_STTS","CTRT_NMTM","BRDT","GNDR","JBPS","GRD","T_CR_PER","RGN","MBL_TELNO","EML","CONTT_MTHD","NTRV_DMND_DT","INP_PSBLTY_DT","OGDP_CO","SN","WHTAX_YN","BZMN_YN","KDS_EMP_YN","CTRT_CO_EMP_YN","CLCT_PICKUP_DT","GIVE_DT","BANK","ACTNO","DEPT","MM_DMND_UNTPRC","ADDR","JBTTL","BRKR","KAKAO_NICK","CTRT_HSTRY_YN","MS","MDL","OS","LANG","DB","TOOL","FRMW","LBRR","CMNCT","ETC","buttons","updateButtonData","keyName","type","filter","displayType","displayKeyName","isAlreadyRegistered","value","some","button","push","resetKorButton","removeButton","index","actualKeyName","Object","keys","find","key","SearchResultEvent","removeFilter","splice","handleRemoveFilter","buttonIndex","findIndex","console","log","add"],"sources":["C:/Users/손승연/IdeaProjects/payinfo/frontend/src/components/common/SearchFilterBtnComponent.vue"],"sourcesContent":["<script setup>\r\nimport { ref, onMounted } from 'vue';\r\nimport eventbus from '@/eventbus/eventbus';\r\n\r\n// 필터 타입에 대한 한글 매핑\r\nconst filterTypeMap = {\r\n  contains: '포함',\r\n  notContains: '포함하지 않음',\r\n  equals: '같음',\r\n  notEqual: '같지 않음',\r\n  startsWith: '시작하는',\r\n  endsWith: '끝나는',\r\n  //숫자필터 관련\r\n  greaterThanOrEqual: '이상',\r\n  lessThanOrEqual: '이하',\r\n  inRange: '범위 내',\r\n};\r\n\r\n// 필드 이름에 대한 한글 매핑\r\nconst fieldNameMap = {\r\n  NM: '이름',\r\n  AGE: '나이',\r\n  PJ_INP_STTS: '프로젝트투입상태',\r\n  CTRT_NMTM: '계약횟수',\r\n  BRDT: '생년월일',\r\n  GNDR: '성별',\r\n  JBPS: '직위',\r\n  GRD: '등급',\r\n  T_CR_PER: '총경력기간',\r\n  RGN: '지역',\r\n  MBL_TELNO: '휴대전화번호',\r\n  EML: '이메일',\r\n  CONTT_MTHD: '컨택방법',\r\n  NTRV_DMND_DT: '인터뷰요청일',\r\n  INP_PSBLTY_DT: '투입가능일',\r\n  OGDP_CO: '소속회사',\r\n  SN: '일련번호',\r\n  WHTAX_YN: '3.3%여부',\r\n  BZMN_YN: '사업자여부',\r\n  KDS_EMP_YN: '자사정규직여부',\r\n  CTRT_CO_EMP_YN: '계약회사정규직여부',\r\n  CLCT_PICKUP_DT: '대금수령날짜',\r\n  GIVE_DT: '지급일자',\r\n  BANK: '은행',\r\n  ACTNO: '계좌번호',\r\n  DEPT: '부서',\r\n  MM_DMND_UNTPRC: '월요청단가',\r\n  ADDR: '주소',\r\n  JBTTL: '직책',\r\n  BRKR: '소개자',\r\n  KAKAO_NICK: '카카오톡닉네임',\r\n  CTRT_HSTRY_YN: '계약이력존재여부',\r\n  MS: '병역',\r\n  MDL: '모델',\r\n  OS: '운영체제',\r\n  LANG: '언어',\r\n  DB: '데이터베이스',\r\n  TOOL: '툴',\r\n  FRMW: '프레임워크',\r\n  LBRR: '라이브러리',\r\n  CMNCT: '통신',\r\n  ETC: '기타',\r\n};\r\n\r\nconst buttons = ref([]);\r\n\r\nconst updateButtonData = (keyName, type, filter) => {\r\n  //filterTypeMap은 필터 타입을 한글로 매핑한 객체입니다. || type는 만약 filterTypeMap[type]가 undefined일 경우, 원래의 타입(type)을 그대로 사용하도록 합니다. 즉, 매핑된 값이 없으면 기본 타입을 사용합니다.\r\n  const displayType = filterTypeMap[type] || type;\r\n  const displayKeyName = fieldNameMap[keyName] || keyName;\r\n\r\n  //지금 추가하려는 버튼과 buttons의 값들을 비교하여 하나라도 중복된 값이 있는 경우\r\n  const isAlreadyRegistered = buttons.value.some(button =>\r\n      button.keyName === displayKeyName && button.filter === filter && button.type === displayType\r\n  );\r\n\r\n  //중복되지 않는 경우 필터를 버튼으로 추가한다. 중복되는 경우는 생략, 이미 필터값 검증 후 필터 중복 시 updateButtonData 실행되지 않음\r\n  if (!isAlreadyRegistered) {\r\n    buttons.value.push({ keyName: displayKeyName, type: displayType, filter });\r\n  }\r\n};\r\n\r\n//초기화 버튼\r\nconst resetKorButton = () => {\r\n  buttons.value = [];\r\n};\r\n\r\n//buttons의 생성된 개수만큼 (button, index) index가 생성되고, 버튼의 x버튼을 누르면 실행되는 removeButton으로 index가 전달된다.\r\nconst removeButton = (index) => {\r\n  const button = buttons.value[index];\r\n\r\n  if (button) {\r\n    // 필드 이름 매핑을 통해 실제 필터 키로 변환\r\n    const actualKeyName = Object.keys(fieldNameMap).find(key => fieldNameMap[key] === button.keyName);\r\n\r\n    if (actualKeyName) {\r\n      // 필터 제거 요청: actualKeyName을 사용하여 필터 제거\r\n      eventbus.SearchResultEvent.removeFilter(actualKeyName, button.type, button.filter); // 필터 제거 이벤트 발생\r\n\r\n      // buttons 배열에서 해당 버튼 제거\r\n      buttons.value.splice(index, 1);\r\n    }\r\n  }\r\n};\r\n\r\n// 필터 버튼 삭제 핸들러\r\nconst handleRemoveFilter = (keyName) => {\r\n  const buttonIndex = buttons.value.findIndex(button => button.keyName === fieldNameMap[keyName]);\r\n  if (buttonIndex !== -1) {\r\n    buttons.value.splice(buttonIndex, 1);\r\n    console.log(`버튼 '${keyName}' 삭제됨`);\r\n  }\r\n};\r\n\r\n// 이벤트 리스너 등록\r\nonMounted(() => {\r\n  eventbus.SearchResultEvent.add('filterUpdate', updateButtonData);\r\n  eventbus.SearchResultEvent.add('resetKorButton', resetKorButton); // resetKorButton 이벤트 등록\r\n  eventbus.SearchResultEvent.add('removeFilter', handleRemoveFilter); // 버튼 삭제 핸들러 등록\r\n});\r\n</script>\r\n\r\n<template>\r\n  <div>\r\n    <button v-for=\"(button, index) in buttons\" :key=\"index\" class=\"btn filterBtn\">\r\n      {{ button.keyName }}: {{ button.filter }} {{ button.type }}\r\n      <span class=\"remove-btn\" @click.stop=\"removeButton(index)\">X</span>\r\n    </button>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.filterBtn {\r\n  background-color: white;\r\n  border-radius: 20px;\r\n  margin: 5px;\r\n  border: 1px solid #b4c7dd;\r\n  position: relative; /* 상대 위치로 설정 */\r\n  padding-right: 20px; /* X 버튼 공간 확보 */\r\n}\r\n\r\n.remove-btn {\r\n  position: absolute; /* 절대 위치로 설정 */\r\n  right: 5px; /* 오른쪽 여백 */\r\n  top: 50%; /* 수직 중앙 정렬 */\r\n  transform: translateY(-50%); /* 중앙 정렬 보정 */\r\n  cursor: pointer; /* 커서 모양 변경 */\r\n  color: red; /* X 버튼 색상 */\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}