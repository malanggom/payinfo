{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.onRemoveSelected && _ctx.onRemoveSelected(...args))\n  }, \"Remove Selected\");\n}","map":{"version":3,"names":["_createElementBlock","onClick","_cache","args","_ctx","onRemoveSelected"],"sources":["C:\\Users\\손승연\\IdeaProjects\\payinfo\\frontend\\src\\components\\common\\DeleteRowDataBtnComponent.vue"],"sourcesContent":["<template>\r\n  <button v-on:click=\"onRemoveSelected\">Remove Selected</button>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    selectedNodes: Array // 부모 컴포넌트에서 선택된 노드 리스트를 전달받음\r\n  },\r\n  methods: {\r\n    async removeSelectedRows() {\r\n      const idsToDelete = this.selectedNodes.map(node => node.id); // 노드 ID 추출\r\n      try {\r\n        await this.$http.delete('/api/rows', { data: { ids: idsToDelete } });\r\n        this.$emit('rowsDeleted'); // 삭제 후 부모에게 알림\r\n      } catch (error) {\r\n        console.error('Failed to delete rows:', error);\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* 스타일 추가 */\r\n</style>"],"mappings":";;uBACEA,mBAAA,CAA8D;IAAjDC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,IAAA,CAAAC,gBAAA,IAAAD,IAAA,CAAAC,gBAAA,IAAAF,IAAA,CAAgB;KAAE,iBAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}