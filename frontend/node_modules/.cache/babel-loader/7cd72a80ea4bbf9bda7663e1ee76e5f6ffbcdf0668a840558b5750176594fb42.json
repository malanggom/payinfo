{"ast":null,"code":"import { ref, shallowRef } from \"vue\";\nimport { AgGridVue } from \"ag-grid-vue3\";\nimport apiClient from '../../axios'; // apiClient를 import\n\nexport default {\n  name: \"SearchResultComponent\",\n  components: {\n    AgGridVue\n  },\n  setup() {\n    const gridApi = shallowRef();\n    const errorMessage = ref(null);\n    const columnDefs = ref([{\n      headerName: \"개발자번호\",\n      field: \"DEV_NO\"\n    }, {\n      headerName: \"이름\",\n      field: \"NM\"\n    }, {\n      headerName: \"프로젝트투입상태\",\n      field: \"PJ_INP_STTS\"\n    }, {\n      headerName: \"계약횟수\",\n      field: \"CTRT_NMTM\"\n    }, {\n      headerName: \"생년월일\",\n      field: \"BRDT\"\n    }, {\n      headerName: \"성별\",\n      field: \"GNDR\"\n    }, {\n      headerName: \"직위\",\n      field: \"JBPS\"\n    }, {\n      headerName: \"등급\",\n      field: \"GRD\"\n    }, {\n      headerName: \"총경력기간\",\n      field: \"T_CR_PER\"\n    }, {\n      headerName: \"병역\",\n      field: \"MS\"\n    }, {\n      headerName: \"지역\",\n      field: \"RGN\"\n    }, {\n      headerName: \"휴대전화번호\",\n      field: \"MBL_TELNO\"\n    }, {\n      headerName: \"이메일\",\n      field: \"EML\"\n    }, {\n      headerName: \"컨택방법\",\n      field: \"CONTT_MTHD\"\n    }, {\n      headerName: \"인터뷰요청일\",\n      field: \"NTRV_DMND_DT\"\n    }, {\n      headerName: \"투입가능일\",\n      field: \"INP_PSBLTY_DT\"\n    }, {\n      headerName: \"소속회사\",\n      field: \"OGDP_CO\"\n    }, {\n      headerName: \"일련번호\",\n      field: \"SN\"\n    }, {\n      headerName: \"3.3%여부\",\n      field: \"WHTAX_YN\"\n    }, {\n      headerName: \"사업자여부\",\n      field: \"BZMN_YN\"\n    }, {\n      headerName: \"자사정규직여부\",\n      field: \"KDS_EMP_YN\"\n    }, {\n      headerName: \"계약회사정규직여부\",\n      field: \"CTRT_CO_EMP_YN\"\n    }, {\n      headerName: \"대금수령날짜\",\n      field: \"CLCT_PICKUP_DT\"\n    }, {\n      headerName: \"지급일자\",\n      field: \"GIVE_DT\"\n    }, {\n      headerName: \"은행\",\n      field: \"BANK\"\n    }, {\n      headerName: \"계좌번호\",\n      field: \"ACTNO\"\n    }, {\n      headerName: \"부서\",\n      field: \"DEPT\"\n    }, {\n      headerName: \"월요청단가\",\n      field: \"MM_DMND_UNTPRC\"\n    }, {\n      headerName: \"주소\",\n      field: \"ADDR\"\n    }, {\n      headerName: \"직책\",\n      field: \"JBTTL\"\n    }, {\n      headerName: \"소개자\",\n      field: \"BRKR\"\n    }, {\n      headerName: \"카카오톡닉네임\",\n      field: \"KAKAO_NICK\"\n    }, {\n      headerName: \"계약이력존재여부\",\n      field: \"CTRT_HSTRY_YN\"\n    }]);\n    const defaultColDef = ref({\n      flex: 1,\n      minWidth: 100,\n      sortable: false\n    });\n    const gridOptions = ref({\n      rowModelType: 'infinite',\n      defaultColDef: defaultColDef.value,\n      rowBuffer: 0,\n      rowSelection: \"multiple\",\n      cacheBlockSize: 100,\n      cacheOverflowSize: 2,\n      maxConcurrentDatasourceRequests: 1,\n      infiniteInitialRowCount: 1000,\n      maxBlocksInCache: 10,\n      onGridReady: params => {\n        gridApi.value = params.api; // gridApi 초기화\n\n        const dataSource = {\n          rowCount: undefined,\n          // 무한 스크롤처럼 동작\n          getRows: async params => {\n            try {\n              console.log(\"asking for \" + params.startRow + \" to \" + params.endRow);\n              const response = await apiClient.get('/dev'); // API 호출\n              const rowsThisPage = response.data.slice(params.startRow, params.endRow);\n              let lastRow = -1;\n              if (response.data.length <= params.endRow) {\n                lastRow = response.data.length;\n              }\n              params.successCallback(rowsThisPage, lastRow);\n            } catch (error) {\n              console.error('Error fetching data:', error);\n              errorMessage.value = '데이터를 가져오는 데 실패했습니다.';\n              params.failCallback();\n            }\n          }\n        };\n        gridApi.value.setDatasource(dataSource); // gridApi를 통해 데이터 소스 설정\n      }\n    });\n    return {\n      columnDefs,\n      gridApi,\n      defaultColDef,\n      gridOptions,\n      errorMessage\n    };\n  }\n};","map":{"version":3,"names":["ref","shallowRef","AgGridVue","apiClient","name","components","setup","gridApi","errorMessage","columnDefs","headerName","field","defaultColDef","flex","minWidth","sortable","gridOptions","rowModelType","value","rowBuffer","rowSelection","cacheBlockSize","cacheOverflowSize","maxConcurrentDatasourceRequests","infiniteInitialRowCount","maxBlocksInCache","onGridReady","params","api","dataSource","rowCount","undefined","getRows","console","log","startRow","endRow","response","get","rowsThisPage","data","slice","lastRow","length","successCallback","error","failCallback","setDatasource"],"sources":["C:\\Users\\User\\.intelij\\payinfo\\frontend\\src\\components\\DevInq\\SearchResultComponent.vue"],"sourcesContent":["===========================================================================\r\nSearchResultComponent.vue\r\n===========================================================================\r\n===========================================================================\r\n템플릿 시작\r\n===========================================================================\r\n<template>\r\n  <div class=\"ag-theme-quartz search-result\" style=\"width: 100%; height: 90%;\">\r\n    <ag-grid-vue\r\n        class=\"search-result-data\"\r\n        style=\"width: 100%; height: 100%;\"\r\n        :columnDefs=\"columnDefs\"\r\n        :gridOptions=\"gridOptions\"\r\n        @grid-ready=\"onGridReady\"\r\n    />\r\n    <div v-if=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</div>\r\n  </div>\r\n</template>\r\n===========================================================================\r\n템플릿 종료\r\n===========================================================================\r\n스크립트 시작\r\n===========================================================================\r\n<script>\r\nimport { ref, shallowRef } from \"vue\";\r\nimport { AgGridVue } from \"ag-grid-vue3\";\r\nimport apiClient from '../../axios'; // apiClient를 import\r\n\r\nexport default {\r\n  name: \"SearchResultComponent\",\r\n  components: {\r\n    AgGridVue,\r\n  },\r\n  setup() {\r\n    const gridApi = shallowRef();\r\n    const errorMessage = ref(null);\r\n\r\n    const columnDefs = ref([\r\n      { headerName: \"개발자번호\", field: \"DEV_NO\" },\r\n      { headerName: \"이름\", field: \"NM\" },\r\n      { headerName: \"프로젝트투입상태\", field: \"PJ_INP_STTS\" },\r\n      { headerName: \"계약횟수\", field: \"CTRT_NMTM\" },\r\n      { headerName: \"생년월일\", field: \"BRDT\" },\r\n      { headerName: \"성별\", field: \"GNDR\" },\r\n      { headerName: \"직위\", field: \"JBPS\" },\r\n      { headerName: \"등급\", field: \"GRD\" },\r\n      { headerName: \"총경력기간\", field: \"T_CR_PER\" },\r\n      { headerName: \"병역\", field: \"MS\" },\r\n      { headerName: \"지역\", field: \"RGN\" },\r\n      { headerName: \"휴대전화번호\", field: \"MBL_TELNO\" },\r\n      { headerName: \"이메일\", field: \"EML\" },\r\n      { headerName: \"컨택방법\", field: \"CONTT_MTHD\" },\r\n      { headerName: \"인터뷰요청일\", field: \"NTRV_DMND_DT\" },\r\n      { headerName: \"투입가능일\", field: \"INP_PSBLTY_DT\" },\r\n      { headerName: \"소속회사\", field: \"OGDP_CO\" },\r\n      { headerName: \"일련번호\", field: \"SN\" },\r\n      { headerName: \"3.3%여부\", field: \"WHTAX_YN\" },\r\n      { headerName: \"사업자여부\", field: \"BZMN_YN\" },\r\n      { headerName: \"자사정규직여부\", field: \"KDS_EMP_YN\" },\r\n      { headerName: \"계약회사정규직여부\", field: \"CTRT_CO_EMP_YN\" },\r\n      { headerName: \"대금수령날짜\", field: \"CLCT_PICKUP_DT\" },\r\n      { headerName: \"지급일자\", field: \"GIVE_DT\" },\r\n      { headerName: \"은행\", field: \"BANK\" },\r\n      { headerName: \"계좌번호\", field: \"ACTNO\" },\r\n      { headerName: \"부서\", field: \"DEPT\" },\r\n      { headerName: \"월요청단가\", field: \"MM_DMND_UNTPRC\" },\r\n      { headerName: \"주소\", field: \"ADDR\" },\r\n      { headerName: \"직책\", field: \"JBTTL\" },\r\n      { headerName: \"소개자\", field: \"BRKR\" },\r\n      { headerName: \"카카오톡닉네임\", field: \"KAKAO_NICK\" },\r\n      { headerName: \"계약이력존재여부\", field: \"CTRT_HSTRY_YN\" },\r\n    ]);\r\n\r\n    const defaultColDef = ref({\r\n      flex: 1,\r\n      minWidth: 100,\r\n      sortable: false,\r\n    });\r\n\r\n    const gridOptions = ref({\r\n      rowModelType: 'infinite',\r\n      defaultColDef: defaultColDef.value,\r\n      rowBuffer: 0,\r\n      rowSelection: \"multiple\",\r\n      cacheBlockSize: 100,\r\n      cacheOverflowSize: 2,\r\n      maxConcurrentDatasourceRequests: 1,\r\n      infiniteInitialRowCount: 1000,\r\n      maxBlocksInCache: 10,\r\n      onGridReady: (params) => {\r\n        gridApi.value = params.api; // gridApi 초기화\r\n\r\n        const dataSource = {\r\n          rowCount: undefined, // 무한 스크롤처럼 동작\r\n          getRows: async (params) => {\r\n            try {\r\n              console.log(\"asking for \" + params.startRow + \" to \" + params.endRow);\r\n              const response = await apiClient.get('/dev'); // API 호출\r\n              const rowsThisPage = response.data.slice(params.startRow, params.endRow);\r\n              let lastRow = -1;\r\n              if (response.data.length <= params.endRow) {\r\n                lastRow = response.data.length;\r\n              }\r\n              params.successCallback(rowsThisPage, lastRow);\r\n            } catch (error) {\r\n              console.error('Error fetching data:', error);\r\n              errorMessage.value = '데이터를 가져오는 데 실패했습니다.';\r\n              params.failCallback();\r\n            }\r\n          },\r\n        };\r\n        gridApi.value.setDatasource(dataSource); // gridApi를 통해 데이터 소스 설정\r\n      },\r\n    });\r\n\r\n    return {\r\n      columnDefs,\r\n      gridApi,\r\n      defaultColDef,\r\n      gridOptions,\r\n      errorMessage,\r\n    };\r\n  },\r\n};\r\n</script>\r\n===========================================================================\r\n스크립트 종료\r\n===========================================================================\r\n스타일 시작\r\n===========================================================================\r\n<style>\r\n@import \"ag-grid-community/styles/ag-grid.css\";\r\n@import \"ag-grid-community/styles/ag-theme-quartz.css\";\r\n.search-result {\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n}\r\n.error-message {\r\n  color: red; /* 에러 메시지 색상 설정 */\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}