{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.buttons, (button, index) => {\n    return _openBlock(), _createElementBlock(\"button\", {\n      key: index,\n      class: \"btn filterBtn\"\n    }, _toDisplayString(button.type) + \": \" + _toDisplayString(button.filter), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_renderList","$setup","buttons","button","index","key","class","type","_toDisplayString","filter"],"sources":["C:\\Users\\User\\.intelij\\payinfo\\frontend\\src\\components\\common\\SearchFilterBtnComponent.vue"],"sourcesContent":["<script setup>\nimport {ref, onMounted} from 'vue';\nimport eventbus from '@/eventbus/eventbus';\n\nconst buttons = ref([]);\n\nconst updateButtonData = (type, filter) => {\n  if (type && filter) {\n    buttons.value.push({type, filter});\n  }\n};\n\nconst resetButtons = () => {\n  buttons.value = []; // 버튼 목록 초기화\n};\n\n// 이벤트 리스너 등록\nonMounted(() => {\n  eventbus.SearchResultEvent.add('filterUpdate', updateButtonData);\n});\n</script>\n\n<template>\n  <div>\n    <button v-for=\"(button, index) in buttons\" :key=\"index\" class=\"btn filterBtn\">\n      {{ button.type }}: {{ button.filter }}\n    </button>\n  </div>\n</template>\n\n<style scoped>\n.filterBtn {\n  background-color: white;\n  border-radius: 20px;\n  margin: 5px; /* 버튼 사이에 간격 추가 */\n  border: 1px solid #b4c7dd;\n}\n</style>"],"mappings":";;uBAuBEA,mBAAA,CAIM,e,kBAHJA,mBAAA,CAESC,SAAA,QA1BbC,WAAA,CAwBsCC,MAAA,CAAAC,OAAO,EAxB7C,CAwBoBC,MAAM,EAAEC,KAAK;yBAA7BN,mBAAA,CAES;MAFmCO,GAAG,EAAED,KAAK;MAAEE,KAAK,EAAC;wBACzDH,MAAM,CAACI,IAAI,IAAG,IAAE,GAAAC,gBAAA,CAAGL,MAAM,CAACM,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}