{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"ag-theme-quartz search-result\",\n  style: {\n    \"width\": \"100%\",\n    \"height\": \"90%\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ag_grid_vue = _resolveComponent(\"ag-grid-vue\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_ag_grid_vue, {\n    style: {\n      \"width\": \"100%\",\n      \"height\": \"100%\"\n    },\n    columnDefs: _ctx.columnDefs,\n    onGridReady: _ctx.onGridReady,\n    defaultColDef: _ctx.defaultColDef,\n    rowSelection: _ctx.rowSelection,\n    rowData: _ctx.rowData\n  }, null, 8 /* PROPS */, [\"columnDefs\", \"onGridReady\", \"defaultColDef\", \"rowSelection\", \"rowData\"])]);\n}","map":{"version":3,"names":["class","style","_createElementBlock","_hoisted_1","_createVNode","_component_ag_grid_vue","columnDefs","_ctx","onGridReady","defaultColDef","rowSelection","rowData"],"sources":["C:\\Users\\손승연\\IdeaProjects\\payinfo\\frontend\\src\\components\\DevInq\\SearchResultComponent.vue"],"sourcesContent":["<template>\r\n  <div class=\"ag-theme-quartz search-result\" style=\"width: 100%; height: 90%;\">\r\n    <ag-grid-vue\r\n        style=\"width: 100%; height: 100%;\"\r\n        :columnDefs=\"columnDefs\"\r\n        @grid-ready=\"onGridReady\"\r\n        :defaultColDef=\"defaultColDef\"\r\n        :rowSelection=\"rowSelection\"\r\n        :rowData=\"rowData\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent, ref, shallowRef } from \"vue\";\r\nimport { AgGridVue } from \"ag-grid-vue3\";\r\nimport \"ag-grid-community/styles/ag-grid.css\";\r\nimport \"ag-grid-community/styles/ag-theme-quartz.css\";\r\n\r\nexport default defineComponent({\r\n  components: {\r\n    \"ag-grid-vue\": AgGridVue,\r\n  },\r\n  setup() {\r\n    const columnDefs = ref([\r\n      { field: \"개발자번호\", minWidth: 170, checkboxSelection: true, headerCheckboxSelection: true },\r\n      { field: \"이름\" },\r\n      { field: \"프로젝트투입상태\" },\r\n      { field: \"계약횟수\" },\r\n      { field: \"생년월일\" },\r\n      { field: \"성별\" },\r\n      { field: \"직위\" },\r\n      { field: \"등급\" },\r\n      { field: \"총경력기간\" },\r\n      { field: \"지역\" },\r\n      { field: \"휴대전화번호\" },\r\n      { field: \"이메일\" },\r\n      { field: \"컨택방법\" },\r\n      { field: \"인터뷰요청일\" },\r\n      { field: \"투입가능일\" },\r\n      { field: \"소속회사\" },\r\n      { field: \"일련번호\" },\r\n      { field: \"3.3%여부\" },\r\n      { field: \"사업자여부\" },\r\n      { field: \"자사정규직여부\" },\r\n      { field: \"계약회사정규직여부\" },\r\n      { field: \"대금수령날짜\" },\r\n      { field: \"지급일자\" },\r\n      { field: \"은행\" },\r\n      { field: \"계좌번호\" },\r\n      { field: \"부서\" },\r\n      { field: \"월요청단가\" },\r\n      { field: \"주소\" },\r\n      { field: \"직책\" },\r\n      { field: \"소개자\" },\r\n      { field: \"카카오톡닉네임\" },\r\n      { field: \"계약이력존재여부\" },\r\n      { field: \"병역\" },\r\n    ]);\r\n\r\n    const gridApi = shallowRef();\r\n    const defaultColDef = ref({\r\n      editable: true,\r\n      filter: true,\r\n      flex: 1,\r\n      resizable: true, // 컬럼 크기 조정 가능\r\n    });\r\n    const rowSelection = ref(\"multiple\");\r\n    const rowData = ref([]);\r\n\r\n    const onGridReady = async (params) => {\r\n      gridApi.value = params.api;\r\n      await fetchData(); // 데이터 가져오기\r\n\r\n      // 데이터가 로드된 후 그리드에 설정\r\n      params.api.setRowData(rowData.value);\r\n\r\n      // 모든 컬럼의 크기를 데이터에 맞게 조정\r\n      params.api.autoSizeAllColumns();\r\n    };\r\n    \r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:8080/api/data');\r\n        const data = await response.json();\r\n\r\n        const translatedData = data.result.row.map(item => ({\r\n          개발자번호: item.DEV_NO,                 // 개발자번호\r\n          이름: item.NM,                           // 이름\r\n          프로젝트투입상태: item.PJ_INP_STTS,    // 프로젝트투입상태\r\n          계약횟수: item.CTRT_NMTM,                 // 계약횟수\r\n          생년월일: item.BRDT,                     // 생년월일\r\n          성별: item.GNDR,                         // 성별\r\n          직위: item.JBPS,                         // 직위\r\n          등급: item.GRD,                          // 등급\r\n          총경력기간: item.T_CR_PER,               // 총경력기간\r\n          지역: item.RGN,                           // 지역\r\n          휴대전화번호: item.MBL_TELNO,                 // 휴대전화번호\r\n          이메일: item.EML,                  // 이메일\r\n          컨택방법: item.CONTT_MTHD,                       // 컨택방법\r\n          인터뷰요청일: item.NTRV_DMND_DT,          // 인터뷰요청일\r\n          투입가능일: item.INP_PSBLTY_DT,           // 투입가능일\r\n          소속회사: item.OGDP_CO,                  // 소속회사\r\n          일련번호: item.SN,                       // 일련번호\r\n          '3.3%여부': item.WHTAX_YN,               // 3.3%여부\r\n          사업자여부: item.BZMN_YN,                // 사업자여부\r\n          자사정규직여부: item.KDS_EMP_YN,         // 자사정규직여부\r\n          계약회사정규직여부: item.CTRT_CO_EMP_YN, // 계약회사정규직여부\r\n          대금수령날짜: item.CLCT_PICKUP_DT,       // 대금수령날짜\r\n          지급일자: item.GIVE_DT,                  // 지급일자\r\n          은행: item.BANK,                         // 은행\r\n          계좌번호: item.ACTNO,                    // 계좌번호\r\n          부서: item.DEPT,                         // 부서\r\n          월요청단가: item.MM_DMND_UNTPRC,        // 월요청단가\r\n          주소: item.ADDR,                         // 주소\r\n          직책: item.JBTTL,                        // 직책\r\n          소개자: item.BRKR,                       // 소개자\r\n          카카오톡닉네임: item.KAKAO_NICK,        // 카카오톡닉네임\r\n          계약이력존재여부: item.CTRT_HSTRY_YN,   // 계약이력존재여부\r\n          병역: item.MS,               // 병역\r\n        }));\r\n\r\n        rowData.value = translatedData; // 변환된 데이터 할당\r\n        console.log(\"할당된 rowData:\", rowData.value); // 할당된 데이터 출력\r\n      } catch (error) {\r\n        console.error('데이터 로드 오류:', error);\r\n      }\r\n    };\r\n\r\n    return {\r\n      columnDefs,\r\n      gridApi,\r\n      defaultColDef,\r\n      rowSelection,\r\n      rowData,\r\n      onGridReady,\r\n    };\r\n  },\r\n});\r\n</script>\r\n\r\n<style>\r\n@import \"ag-grid-community/styles/ag-grid.css\";\r\n@import \"ag-grid-community/styles/ag-theme-quartz.css\";\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC,+BAA+B;EAACC,KAAiC,EAAjC;IAAA;IAAA;EAAA;;;;uBAA3CC,mBAAA,CASM,OATNC,UASM,GARJC,YAAA,CAOEC,sBAAA;IANEJ,KAAkC,EAAlC;MAAA;MAAA;IAAA,CAAkC;IACjCK,UAAU,EAAEC,IAAA,CAAAD,UAAU;IACtBE,WAAU,EAAED,IAAA,CAAAC,WAAW;IACvBC,aAAa,EAAEF,IAAA,CAAAE,aAAa;IAC5BC,YAAY,EAAEH,IAAA,CAAAG,YAAY;IAC1BC,OAAO,EAAEJ,IAAA,CAAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}