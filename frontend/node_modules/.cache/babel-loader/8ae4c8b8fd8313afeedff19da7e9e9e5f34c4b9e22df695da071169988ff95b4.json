{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"ag-theme-quartz search__result\",\n  style: {\n    \"width\": \"100%\",\n    \"height\": \"90%\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ag_grid_vue = _resolveComponent(\"ag-grid-vue\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_ag_grid_vue, {\n    class: \"search__result__data\",\n    style: {\n      \"width\": \"100%\",\n      \"height\": \"100%\"\n    },\n    columnDefs: _ctx.colDefs,\n    gridOptions: $setup.gridOptions,\n    onGridReady: $setup.onGridReady\n  }, null, 8 /* PROPS */, [\"columnDefs\", \"gridOptions\", \"onGridReady\"])]);\n}","map":{"version":3,"names":["class","style","_createElementBlock","_hoisted_1","_createVNode","_component_ag_grid_vue","columnDefs","_ctx","colDefs","gridOptions","$setup","onGridReady"],"sources":["C:\\Users\\손승연\\IdeaProjects\\payinfo\\frontend\\src\\components\\PjInq\\SearchResultComponent.vue"],"sourcesContent":["===========================================================================\r\n                        SearchResultComponent.vue\r\n===========================================================================\r\n===========================================================================\r\n                                템플릿 시작\r\n===========================================================================\r\n<template>\r\n  <div class=\"ag-theme-quartz search__result\" style=\"width: 100%; height: 90%;\">\r\n    <ag-grid-vue\r\n        class=\"search__result__data\"\r\n        style=\"width: 100%; height: 100%;\"\r\n        :columnDefs=\"colDefs\"\r\n        :gridOptions=\"gridOptions\"\r\n        @grid-ready=\"onGridReady\"\r\n    />\r\n  </div>\r\n</template>\r\n===========================================================================\r\n                                템플릿 종료\r\n===========================================================================\r\n                                스크립트 시작\r\n===========================================================================\r\n<script>\r\nimport { ref } from 'vue';\r\nimport { AgGridVue } from \"ag-grid-vue3\"; // Vue Data Grid Component\r\n\r\nexport default {\r\n  name: \"App\",\r\n  components: {\r\n    AgGridVue,\r\n  },\r\n  setup() {\r\n    const gridApi = ref(null); // grid API 선언\r\n    const gridOptions = ref({\r\n      rowModelType: 'infinite',\r\n      datasource: null,\r\n      columnDefs: [\r\n        {\r\n          headerName: \"ID\",\r\n          maxWidth: 100,\r\n          valueGetter: \"node.id\",\r\n          cellRenderer: (params) => {\r\n            if (params.value !== undefined) {\r\n              return params.value;\r\n            } else {\r\n              return '<img src=\"https://www.ag-grid.com/example-assets/loading.gif\">';\r\n            }\r\n          },\r\n        },\r\n        { field: \"athlete\", minWidth: 150 },\r\n        { field: \"age\" },\r\n        { field: \"country\", minWidth: 150 },\r\n        { field: \"year\" },\r\n        { field: \"date\", minWidth: 150 },\r\n        { field: \"sport\", minWidth: 150 },\r\n        { field: \"gold\" },\r\n        { field: \"silver\" },\r\n        { field: \"bronze\" },\r\n        { field: \"total\" },\r\n      ],\r\n      defaultColDef: {\r\n        flex: 1,\r\n        minWidth: 100,\r\n        sortable: false,\r\n      },\r\n      rowBuffer: 0,\r\n      rowSelection: \"multiple\",\r\n      cacheBlockSize: 100,\r\n      maxConcurrentDatasourceRequests: 1,\r\n      infiniteInitialRowCount: 1000,\r\n      maxBlocksInCache: 10,\r\n    });\r\n\r\n    // 데이터 소스 설정\r\n    const myDataSource = {\r\n      rowCount: undefined, // behave as infinite scroll\r\n\r\n      getRows: (params) => {\r\n        console.log(\"Requesting rows from \" + params.startRow + \" to \" + params.endRow);\r\n\r\n        // 서버에서 데이터를 요청\r\n        fetch(`https://www.ag-grid.com/example-assets/olympic-winners.json`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n              // 실제 데이터에 맞게 paging 처리\r\n              const rowsThisPage = data.slice(params.startRow, params.endRow);\r\n              let lastRow = -1;\r\n              if (data.length <= params.endRow) {\r\n                lastRow = data.length;\r\n              }\r\n              params.successCallback(rowsThisPage, lastRow);\r\n            })\r\n            .catch(error => {\r\n              console.error('Error fetching data:', error);\r\n              params.failCallback();\r\n            });\r\n      },\r\n    };\r\n\r\n    // 그리드가 초기화되기 전에 기본 설정\r\n    gridOptions.value.datasource = myDataSource;\r\n\r\n    // 그리드 초기화 후에 데이터 소스를 설정하는 메서드\r\n    const onGridReady = (params) => {\r\n      gridApi.value = params.api; // gridApi 저장\r\n      params.api.setDatasource(myDataSource);\r\n    };\r\n\r\n    return {\r\n      gridOptions,\r\n      onGridReady,\r\n    };\r\n  },\r\n};\r\n</script>\r\n===========================================================================\r\n                                스크립트 종료\r\n===========================================================================\r\n                                스타일 시작\r\n===========================================================================\r\n<style>\r\n@import \"ag-grid-community/styles/ag-grid.css\";\r\n@import \"ag-grid-community/styles/ag-theme-quartz.css\";\r\n.search__result{\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n}\r\n</style>"],"mappings":";;EAOOA,KAAK,EAAC,gCAAgC;EAACC,KAAiC,EAAjC;IAAA;IAAA;EAAA;;;;uBAA5CC,mBAAA,CAQM,OARNC,UAQM,GAPJC,YAAA,CAMEC,sBAAA;IALEL,KAAK,EAAC,sBAAsB;IAC5BC,KAAkC,EAAlC;MAAA;MAAA;IAAA,CAAkC;IACjCK,UAAU,EAAEC,IAAA,CAAAC,OAAO;IACnBC,WAAW,EAAEC,MAAA,CAAAD,WAAW;IACxBE,WAAU,EAAED,MAAA,CAAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}