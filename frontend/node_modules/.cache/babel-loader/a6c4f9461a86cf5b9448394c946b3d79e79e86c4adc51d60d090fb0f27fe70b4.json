{"ast":null,"code":"import { defineComponent, ref, shallowRef } from \"vue\";\nimport { AgGridVue } from \"ag-grid-vue3\";\nimport \"ag-grid-community/styles/ag-grid.css\";\nimport \"ag-grid-community/styles/ag-theme-quartz.css\";\nexport default defineComponent({\n  components: {\n    \"ag-grid-vue\": AgGridVue\n  },\n  setup() {\n    const columnDefs = ref([{\n      field: \"DEV_NO\",\n      minWidth: 170,\n      checkboxSelection: true,\n      headerCheckboxSelection: true\n    }, {\n      field: \"NM\"\n    }, {\n      field: \"PJ_INP_STTS\"\n    }, {\n      field: \"CTRT_NMTM\"\n    }, {\n      field: \"BRDT\"\n    }, {\n      field: \"GNDR\"\n    }, {\n      field: \"JBPS\"\n    }, {\n      field: \"GRD\"\n    }, {\n      field: \"T_CR_PER\"\n    }, {\n      field: \"RGN\"\n    }, {\n      field: \"MBL_TELNO\"\n    }, {\n      field: \"EML\"\n    }, {\n      field: \"CONTT_MTHD\"\n    }, {\n      field: \"NTRV_DMND_DT\"\n    }, {\n      field: \"INPUT_PSBLTY_DT\"\n    }, {\n      field: \"OGDP_CO\"\n    }, {\n      field: \"SN\"\n    }, {\n      field: \"WHTAX_YN\"\n    }, {\n      field: \"BZMN_YN\"\n    }, {\n      field: \"KDS_EMP_YN\"\n    }, {\n      field: \"CTRT_CO_EMP_YN\"\n    }, {\n      field: \"CLCT_PICKUP_DT\"\n    }, {\n      field: \"GIVE_DT\"\n    }, {\n      field: \"BANK\"\n    }, {\n      field: \"ACTNO\"\n    }, {\n      field: \"DEPT\"\n    }, {\n      field: \"MM_DMND_UNTPRC\"\n    }, {\n      field: \"ADDR\"\n    }, {\n      field: \"JBTTL\"\n    }, {\n      field: \"BRKR\"\n    }, {\n      field: \"KAKAO_NICK\"\n    }, {\n      field: \"CTRT_HSTRY_YN\"\n    }, {\n      field: \"MS\"\n    }]);\n    const gridApi = shallowRef();\n    const defaultColDef = ref({\n      editable: true,\n      filter: true,\n      flex: 1,\n      minWidth: 100\n    });\n    const rowSelection = ref(\"multiple\");\n    const rowData = ref([]);\n    const onGridReady = params => {\n      gridApi.value = params.api;\n      fetch(\"http://localhost:8080/api/data\").then(resp => resp.json()).then(data => {\n        console.log(\"API 응답:\", data); // API 응답 출력\n        rowData.value = data.result.row; // 데이터 할당\n        console.log(\"할당된 rowData:\", rowData.value); // 할당된 데이터 출력\n      }).catch(error => {\n        console.error(\"데이터 로드 오류:\", error);\n      });\n    };\n    return {\n      columnDefs,\n      gridApi,\n      defaultColDef,\n      rowSelection,\n      rowData,\n      onGridReady\n    };\n  }\n});","map":{"version":3,"names":["defineComponent","ref","shallowRef","AgGridVue","components","setup","columnDefs","field","minWidth","checkboxSelection","headerCheckboxSelection","gridApi","defaultColDef","editable","filter","flex","rowSelection","rowData","onGridReady","params","value","api","fetch","then","resp","json","data","console","log","result","row","catch","error"],"sources":["C:\\Users\\User\\.intelij\\payinfo\\frontend\\src\\components\\DevInq\\SearchResultComponent.vue"],"sourcesContent":["<template>\r\n  <div class=\"ag-theme-quartz search-result\" style=\"width: 100%; height: 90%;\">\r\n    <ag-grid-vue\r\n        style=\"width: 100%; height: 100%;\"\r\n        :columnDefs=\"columnDefs\"\r\n        @grid-ready=\"onGridReady\"\r\n        :defaultColDef=\"defaultColDef\"\r\n        :rowSelection=\"rowSelection\"\r\n        :rowData=\"rowData\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent, ref, shallowRef } from \"vue\";\r\nimport { AgGridVue } from \"ag-grid-vue3\";\r\nimport \"ag-grid-community/styles/ag-grid.css\";\r\nimport \"ag-grid-community/styles/ag-theme-quartz.css\";\r\n\r\nexport default defineComponent({\r\n  components: {\r\n    \"ag-grid-vue\": AgGridVue,\r\n  },\r\n  setup() {\r\n    const columnDefs = ref([\r\n      {field: \"DEV_NO\", minWidth: 170, checkboxSelection: true, headerCheckboxSelection: true},\r\n      {field: \"NM\"},\r\n      {field: \"PJ_INP_STTS\"},\r\n      {field: \"CTRT_NMTM\"},\r\n      {field: \"BRDT\"},\r\n      {field: \"GNDR\"},\r\n      {field: \"JBPS\"},\r\n      {field: \"GRD\"},\r\n      {field: \"T_CR_PER\"},\r\n      {field: \"RGN\"},\r\n      {field: \"MBL_TELNO\"},\r\n      {field: \"EML\"},\r\n      {field: \"CONTT_MTHD\"},\r\n      {field: \"NTRV_DMND_DT\"},\r\n      {field: \"INPUT_PSBLTY_DT\"},\r\n      {field: \"OGDP_CO\"},\r\n      {field: \"SN\"},\r\n      {field: \"WHTAX_YN\"},\r\n      {field: \"BZMN_YN\"},\r\n      {field: \"KDS_EMP_YN\"},\r\n      {field: \"CTRT_CO_EMP_YN\"},\r\n      {field: \"CLCT_PICKUP_DT\"},\r\n      {field: \"GIVE_DT\"},\r\n      {field: \"BANK\"},\r\n      {field: \"ACTNO\"},\r\n      {field: \"DEPT\"},\r\n      {field: \"MM_DMND_UNTPRC\"},\r\n      {field: \"ADDR\"},\r\n      {field: \"JBTTL\"},\r\n      {field: \"BRKR\"},\r\n      {field: \"KAKAO_NICK\"},\r\n      {field: \"CTRT_HSTRY_YN\"},\r\n      {field: \"MS\"},\r\n    ]);\r\n\r\n    const gridApi = shallowRef();\r\n    const defaultColDef = ref({\r\n      editable: true,\r\n      filter: true,\r\n      flex: 1,\r\n      minWidth: 100,\r\n    });\r\n    const rowSelection = ref(\"multiple\");\r\n    const rowData = ref([]);\r\n\r\n    const onGridReady = (params) => {\r\n      gridApi.value = params.api;\r\n      fetch(\"http://localhost:8080/api/data\")\r\n          .then((resp) => resp.json())\r\n          .then((data) => {\r\n            console.log(\"API 응답:\", data); // API 응답 출력\r\n            rowData.value = data.result.row; // 데이터 할당\r\n            console.log(\"할당된 rowData:\", rowData.value); // 할당된 데이터 출력\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"데이터 로드 오류:\", error);\r\n          });\r\n    };\r\n\r\n    return {\r\n      columnDefs,\r\n      gridApi,\r\n      defaultColDef,\r\n      rowSelection,\r\n      rowData,\r\n      onGridReady,\r\n    };\r\n  },\r\n});\r\n</script>\r\n\r\n<style>\r\n@import \"ag-grid-community/styles/ag-grid.css\";\r\n@import \"ag-grid-community/styles/ag-theme-quartz.css\";\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}