{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, withModifiers as _withModifiers, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-2b92bcc5\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.buttons, (button, index) => {\n    return _openBlock(), _createElementBlock(\"button\", {\n      key: index,\n      class: \"btn filterBtn\"\n    }, [_createTextVNode(_toDisplayString(button.keyName) + \": \" + _toDisplayString(button.filter) + \" \" + _toDisplayString(button.type) + \" \", 1 /* TEXT */), _createElementVNode(\"span\", {\n      class: \"remove-btn\",\n      onClick: _withModifiers($event => $setup.removeButton(index), [\"stop\"])\n    }, \"X\", 8 /* PROPS */, _hoisted_1)]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_renderList","$setup","buttons","button","index","key","class","_createTextVNode","_toDisplayString","keyName","filter","type","_createElementVNode","onClick","_withModifiers","$event","removeButton","_hoisted_1"],"sources":["C:\\Users\\손승연\\IdeaProjects\\payinfo\\frontend\\src\\components\\common\\SearchFilterBtnComponent.vue"],"sourcesContent":["<script setup>\r\nimport { ref, onMounted } from 'vue';\r\nimport eventbus from '@/eventbus/eventbus';\r\n\r\nconst buttons = ref([]);\r\n\r\nconst updateButtonData = (keyName, type, filter) => {\r\n  buttons.value.push({ keyName, type, filter });\r\n}\r\n\r\nconst resetButtons = () => {\r\n  buttons.value.forEach(button => {\r\n    eventbus.SearchResultEvent.removeFilter(button.type, button.filter);\r\n  });\r\n  buttons.value = [];\r\n}\r\n\r\nconst removeButton = (index) => {\r\n  const button = buttons.value[index];\r\n  if (button) {\r\n    eventbus.SearchResultEvent.removeFilter(button.type, button.filter); // 필터 제거 이벤트 발생\r\n  }\r\n  buttons.value.splice(index, 1); // 특정 인덱스의 버튼 삭제\r\n};\r\n\r\n// 이벤트 리스너 등록\r\nonMounted(() => {\r\n  eventbus.SearchResultEvent.add('filterUpdate', updateButtonData);\r\n  eventbus.SearchResultEvent.add('resetButtons', resetButtons);\r\n});\r\n</script>\r\n\r\n<template>\r\n  <div>\r\n    <button v-for=\"(button, index) in buttons\" :key=\"index\" class=\"btn filterBtn\">\r\n      {{ button.keyName }}: {{ button.filter }} {{ button.type }}\r\n      <span class=\"remove-btn\" @click.stop=\"removeButton(index)\">X</span>\r\n    </button>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.filterBtn {\r\n  background-color: white;\r\n  border-radius: 20px;\r\n  margin: 5px;\r\n  border: 1px solid #b4c7dd;\r\n  position: relative; /* 상대 위치로 설정 */\r\n  padding-right: 20px; /* X 버튼 공간 확보 */\r\n}\r\n\r\n.remove-btn {\r\n  position: absolute; /* 절대 위치로 설정 */\r\n  right: 5px; /* 오른쪽 여백 */\r\n  top: 50%; /* 수직 중앙 정렬 */\r\n  transform: translateY(-50%); /* 중앙 정렬 보정 */\r\n  cursor: pointer; /* 커서 모양 변경 */\r\n  color: red; /* X 버튼 색상 */\r\n}\r\n</style>"],"mappings":";;mBAAA;;uBAiCEA,mBAAA,CAKM,e,kBAJJA,mBAAA,CAGSC,SAAA,QArCbC,WAAA,CAkCsCC,MAAA,CAAAC,OAAO,EAlC7C,CAkCoBC,MAAM,EAAEC,KAAK;yBAA7BN,mBAAA,CAGS;MAHmCO,GAAG,EAAED,KAAK;MAAEE,KAAK,EAAC;QAlClEC,gBAAA,CAAAC,gBAAA,CAmCSL,MAAM,CAACM,OAAO,IAAG,IAAE,GAAAD,gBAAA,CAAGL,MAAM,CAACO,MAAM,IAAG,GAAC,GAAAF,gBAAA,CAAGL,MAAM,CAACQ,IAAI,IAAG,GAC3D,iBAAAC,mBAAA,CAAmE;MAA7DN,KAAK,EAAC,YAAY;MAAEO,OAAK,EApCrCC,cAAA,CAAAC,MAAA,IAoC4Cd,MAAA,CAAAe,YAAY,CAACZ,KAAK;OAAG,GAAC,iBApClEa,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}