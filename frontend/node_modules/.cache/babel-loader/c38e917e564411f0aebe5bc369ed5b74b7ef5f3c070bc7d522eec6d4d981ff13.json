{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nlet handlers = {\n  deleteRow: [],\n  search: [],\n  reset: [],\n  filterUpdate: [],\n  resetButtons: [],\n  registeredFilters: [] // 등록된 필터를 저장할 배열 추가\n};\nexport { handlers }; // handlers를 export\n\nexport default {\n  SearchResultEvent: {\n    add(eventType, handler) {\n      if (handlers[eventType]) {\n        handlers[eventType].push(handler);\n      }\n    },\n    deleteRowBtnClick() {\n      handlers.deleteRow.forEach(handler => handler()); // deleteRow 핸들러만 호출\n    },\n    fetchData(type, filter) {\n      handlers.search.forEach(handler => handler(type, filter));\n    },\n    resetFilters(keyName) {\n      console.log('resetFilter 호출됨:', keyName); // 로그 추가\n      handlers.reset.forEach(handler => handler()); // reset 핸들러 호출\n      handlers.resetButtons.forEach(handler => {\n        console.log('resetButtons 호출됨:', keyName); // 로그 추가\n        handler(keyName); // resetButtons 핸들러 호출, keyName 전달\n      });\n    },\n    resetButtons(keyName) {\n      console.log('resetButtons 이벤트 발생:', keyName);\n      console.log('등록된 핸들러 수:', handlers.resetButtons.length); // 핸들러 수 확인\n      handlers.resetButtons.forEach(handler => handler(keyName)); // resetButtons 핸들러 호출\n    },\n    filterUpdate(KeyName, type, filter) {\n      // 등록된 필터 추가\n      handlers.registeredFilters.push({\n        KeyName,\n        type,\n        filter\n      });\n      handlers.filterUpdate.forEach(handler => handler(KeyName, type, filter));\n    },\n    getRegisteredFilters() {\n      return handlers.registeredFilters; // 등록된 필터 반환\n    },\n    removeFilter(KeyName, type, filter) {\n      handlers.filterUpdate.forEach(handler => handler(KeyName, type, filter));\n      // 등록된 필터에서 제거하는 로직 추가 필요\n      handlers.registeredFilters = handlers.registeredFilters.filter(registeredFilter => registeredFilter.type !== type || registeredFilter.filter !== filter);\n    }\n  }\n};","map":{"version":3,"names":["handlers","deleteRow","search","reset","filterUpdate","resetButtons","registeredFilters","SearchResultEvent","add","eventType","handler","push","deleteRowBtnClick","forEach","fetchData","type","filter","resetFilters","keyName","console","log","length","KeyName","getRegisteredFilters","removeFilter","registeredFilter"],"sources":["C:/Users/손승연/IdeaProjects/payinfo/frontend/src/eventbus/eventbus.js"],"sourcesContent":["let handlers = {\r\n    deleteRow: [],\r\n    search: [],\r\n    reset: [],\r\n    filterUpdate: [],\r\n    resetButtons: [],\r\n    registeredFilters: [] // 등록된 필터를 저장할 배열 추가\r\n};\r\n\r\nexport { handlers }; // handlers를 export\r\n\r\nexport default {\r\n    SearchResultEvent: {\r\n        add(eventType, handler) {\r\n            if (handlers[eventType]) {\r\n                handlers[eventType].push(handler);\r\n            }\r\n        },\r\n        deleteRowBtnClick() {\r\n            handlers.deleteRow.forEach(handler => handler()); // deleteRow 핸들러만 호출\r\n        },\r\n        fetchData(type, filter) {\r\n            handlers.search.forEach(handler => handler(type, filter));\r\n        },\r\n        resetFilters(keyName) {\r\n            console.log('resetFilter 호출됨:', keyName); // 로그 추가\r\n            handlers.reset.forEach(handler => handler()); // reset 핸들러 호출\r\n            handlers.resetButtons.forEach(handler => {\r\n                console.log('resetButtons 호출됨:', keyName); // 로그 추가\r\n                handler(keyName); // resetButtons 핸들러 호출, keyName 전달\r\n            });\r\n        },\r\n        resetButtons(keyName) {\r\n            console.log('resetButtons 이벤트 발생:', keyName);\r\n            console.log('등록된 핸들러 수:', handlers.resetButtons.length); // 핸들러 수 확인\r\n            handlers.resetButtons.forEach(handler => handler(keyName)); // resetButtons 핸들러 호출\r\n        },\r\n        filterUpdate(KeyName, type, filter) {\r\n            // 등록된 필터 추가\r\n            handlers.registeredFilters.push({ KeyName, type, filter });\r\n            handlers.filterUpdate.forEach(handler => handler(KeyName, type, filter));\r\n        },\r\n        getRegisteredFilters() {\r\n            return handlers.registeredFilters; // 등록된 필터 반환\r\n        },\r\n        removeFilter(KeyName, type, filter) {\r\n            handlers.filterUpdate.forEach(handler => handler(KeyName, type, filter));\r\n            // 등록된 필터에서 제거하는 로직 추가 필요\r\n            handlers.registeredFilters = handlers.registeredFilters.filter(registeredFilter =>\r\n                registeredFilter.type !== type || registeredFilter.filter !== filter\r\n            );\r\n        },\r\n    }\r\n}"],"mappings":";AAAA,IAAIA,QAAQ,GAAG;EACXC,SAAS,EAAE,EAAE;EACbC,MAAM,EAAE,EAAE;EACVC,KAAK,EAAE,EAAE;EACTC,YAAY,EAAE,EAAE;EAChBC,YAAY,EAAE,EAAE;EAChBC,iBAAiB,EAAE,EAAE,CAAC;AAC1B,CAAC;AAED,SAASN,QAAQ,GAAG,CAAC;;AAErB,eAAe;EACXO,iBAAiB,EAAE;IACfC,GAAGA,CAACC,SAAS,EAAEC,OAAO,EAAE;MACpB,IAAIV,QAAQ,CAACS,SAAS,CAAC,EAAE;QACrBT,QAAQ,CAACS,SAAS,CAAC,CAACE,IAAI,CAACD,OAAO,CAAC;MACrC;IACJ,CAAC;IACDE,iBAAiBA,CAAA,EAAG;MAChBZ,QAAQ,CAACC,SAAS,CAACY,OAAO,CAACH,OAAO,IAAIA,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;IACtD,CAAC;IACDI,SAASA,CAACC,IAAI,EAAEC,MAAM,EAAE;MACpBhB,QAAQ,CAACE,MAAM,CAACW,OAAO,CAACH,OAAO,IAAIA,OAAO,CAACK,IAAI,EAAEC,MAAM,CAAC,CAAC;IAC7D,CAAC;IACDC,YAAYA,CAACC,OAAO,EAAE;MAClBC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,OAAO,CAAC,CAAC,CAAC;MAC1ClB,QAAQ,CAACG,KAAK,CAACU,OAAO,CAACH,OAAO,IAAIA,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;MAC9CV,QAAQ,CAACK,YAAY,CAACQ,OAAO,CAACH,OAAO,IAAI;QACrCS,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,OAAO,CAAC,CAAC,CAAC;QAC3CR,OAAO,CAACQ,OAAO,CAAC,CAAC,CAAC;MACtB,CAAC,CAAC;IACN,CAAC;IACDb,YAAYA,CAACa,OAAO,EAAE;MAClBC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEF,OAAO,CAAC;MAC5CC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEpB,QAAQ,CAACK,YAAY,CAACgB,MAAM,CAAC,CAAC,CAAC;MACzDrB,QAAQ,CAACK,YAAY,CAACQ,OAAO,CAACH,OAAO,IAAIA,OAAO,CAACQ,OAAO,CAAC,CAAC,CAAC,CAAC;IAChE,CAAC;IACDd,YAAYA,CAACkB,OAAO,EAAEP,IAAI,EAAEC,MAAM,EAAE;MAChC;MACAhB,QAAQ,CAACM,iBAAiB,CAACK,IAAI,CAAC;QAAEW,OAAO;QAAEP,IAAI;QAAEC;MAAO,CAAC,CAAC;MAC1DhB,QAAQ,CAACI,YAAY,CAACS,OAAO,CAACH,OAAO,IAAIA,OAAO,CAACY,OAAO,EAAEP,IAAI,EAAEC,MAAM,CAAC,CAAC;IAC5E,CAAC;IACDO,oBAAoBA,CAAA,EAAG;MACnB,OAAOvB,QAAQ,CAACM,iBAAiB,CAAC,CAAC;IACvC,CAAC;IACDkB,YAAYA,CAACF,OAAO,EAAEP,IAAI,EAAEC,MAAM,EAAE;MAChChB,QAAQ,CAACI,YAAY,CAACS,OAAO,CAACH,OAAO,IAAIA,OAAO,CAACY,OAAO,EAAEP,IAAI,EAAEC,MAAM,CAAC,CAAC;MACxE;MACAhB,QAAQ,CAACM,iBAAiB,GAAGN,QAAQ,CAACM,iBAAiB,CAACU,MAAM,CAACS,gBAAgB,IAC3EA,gBAAgB,CAACV,IAAI,KAAKA,IAAI,IAAIU,gBAAgB,CAACT,MAAM,KAAKA,MAClE,CAAC;IACL;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}