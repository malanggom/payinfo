{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted } from 'vue';\nimport eventbus from '@/eventbus/eventbus';\nexport default {\n  __name: 'SearchFilterBtnComponent',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const buttons = ref([]);\n    const updateButtonData = (type, filter) => {\n      // 이미 추가된 버튼인지 확인\n      const exists = buttons.value.some(button => button.type === type && button.filter === filter);\n      if (!exists) {\n        buttons.value.push({\n          type,\n          filter\n        });\n      } else {\n        alert('이미 추가된 버튼입니다.'); // 경고 메시지 표시\n      }\n    };\n    const resetButtons = () => {\n      buttons.value = []; // 버튼 목록 초기화\n    };\n\n    // 이벤트 리스너 등록\n    onMounted(() => {\n      eventbus.SearchResultEvent.add('filterUpdate', updateButtonData);\n      eventbus.SearchResultEvent.add('resetButtons', resetButtons); // resetButtons 이벤트 리스너 등록\n    });\n    const __returned__ = {\n      buttons,\n      updateButtonData,\n      resetButtons,\n      ref,\n      onMounted,\n      get eventbus() {\n        return eventbus;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","eventbus","buttons","updateButtonData","type","filter","exists","value","some","button","push","alert","resetButtons","SearchResultEvent","add"],"sources":["C:/Users/User/.intelij/payinfo/frontend/src/components/common/SearchFilterBtnComponent.vue"],"sourcesContent":["<script setup>\nimport {ref, onMounted} from 'vue';\nimport eventbus from '@/eventbus/eventbus';\n\nconst buttons = ref([]);\n\nconst updateButtonData = (type, filter) => {\n  // 이미 추가된 버튼인지 확인\n  const exists = buttons.value.some(button => button.type === type && button.filter === filter);\n\n  if (!exists) {\n    buttons.value.push({ type, filter });\n  } else {\n    alert('이미 추가된 버튼입니다.'); // 경고 메시지 표시\n  }\n};\n\nconst resetButtons = () => {\n  buttons.value = []; // 버튼 목록 초기화\n};\n\n// 이벤트 리스너 등록\nonMounted(() => {\n  eventbus.SearchResultEvent.add('filterUpdate', updateButtonData);\n  eventbus.SearchResultEvent.add('resetButtons', resetButtons); // resetButtons 이벤트 리스너 등록\n});\n</script>\n\n<template>\n  <div>\n    <button v-for=\"(button, index) in buttons\" :key=\"index\" class=\"btn filterBtn\">\n      {{ button.type }}: {{ button.filter }}\n    </button>\n  </div>\n</template>\n\n<style scoped>\n.filterBtn {\n  background-color: white;\n  border-radius: 20px;\n  margin: 5px; /* 버튼 사이에 간격 추가 */\n  border: 1px solid #b4c7dd;\n}\n</style>"],"mappings":";AACA,SAAQA,GAAG,EAAEC,SAAS,QAAO,KAAK;AAClC,OAAOC,QAAQ,MAAM,qBAAqB;;;;;;;IAE1C,MAAMC,OAAO,GAAGH,GAAG,CAAC,EAAE,CAAC;IAEvB,MAAMI,gBAAgB,GAAGA,CAACC,IAAI,EAAEC,MAAM,KAAK;MACzC;MACA,MAAMC,MAAM,GAAGJ,OAAO,CAACK,KAAK,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACL,IAAI,KAAKA,IAAI,IAAIK,MAAM,CAACJ,MAAM,KAAKA,MAAM,CAAC;MAE7F,IAAI,CAACC,MAAM,EAAE;QACXJ,OAAO,CAACK,KAAK,CAACG,IAAI,CAAC;UAAEN,IAAI;UAAEC;QAAO,CAAC,CAAC;MACtC,CAAC,MAAM;QACLM,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC;MAC1B;IACF,CAAC;IAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;MACzBV,OAAO,CAACK,KAAK,GAAG,EAAE,CAAC,CAAC;IACtB,CAAC;;IAED;IACAP,SAAS,CAAC,MAAM;MACdC,QAAQ,CAACY,iBAAiB,CAACC,GAAG,CAAC,cAAc,EAAEX,gBAAgB,CAAC;MAChEF,QAAQ,CAACY,iBAAiB,CAACC,GAAG,CAAC,cAAc,EAAEF,YAAY,CAAC,CAAC,CAAC;IAChE,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}