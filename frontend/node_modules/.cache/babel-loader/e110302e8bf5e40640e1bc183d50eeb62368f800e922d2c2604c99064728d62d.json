{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.onRemoveSelected && _ctx.onRemoveSelected(...args))\n  }, \"Remove Selected\");\n}","map":{"version":3,"names":["_createElementBlock","onClick","_cache","args","_ctx","onRemoveSelected"],"sources":["C:\\Users\\User\\.intelij\\payinfo\\frontend\\src\\components\\common\\DeleteRowDataBtnComponent.vue"],"sourcesContent":["<template>\r\n  <button v-on:click=\"onRemoveSelected\">Remove Selected</button>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent, inject } from 'vue';\r\n\r\nexport default defineComponent({\r\n  setup() {\r\n    const gridApi = inject('gridApi');\r\n\r\n    const onRemoveSelected = () => {\r\n      if (!gridApi || !gridApi.value) {\r\n        console.error('gridApi가 정의되지 않았습니다.');\r\n        return;\r\n      }\r\n\r\n      const selectedData = gridApi.value.getSelectedRows(); // 선택된 행 데이터 가져오기\r\n      const res = gridApi.value.applyTransaction({remove: selectedData}); // 선택된 행 삭제\r\n      console.log(res);\r\n    };\r\n\r\n    return {\r\n      onRemoveSelected,\r\n    };\r\n  },\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n/* 스타일 추가 */\r\n</style>"],"mappings":";;uBACEA,mBAAA,CAA8D;IAAjDC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,IAAA,CAAAC,gBAAA,IAAAD,IAAA,CAAAC,gBAAA,IAAAF,IAAA,CAAgB;KAAE,iBAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}