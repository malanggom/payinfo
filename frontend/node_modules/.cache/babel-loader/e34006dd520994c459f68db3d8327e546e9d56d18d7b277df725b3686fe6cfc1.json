{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted, watch } from 'vue';\nimport eventbus from '@/eventbus/eventbus';\nexport default {\n  __name: 'SearchFilterBtnComponent',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const buttons = ref([]);\n    const updateButtonData = (type, filter) => {\n      buttons.value.push({\n        type,\n        filter\n      });\n    };\n    const resetButtons = () => {\n      buttons.value = [];\n    };\n    const removeButton = index => {\n      // 해당 버튼 삭제\n      const removedButton = buttons.value.splice(index, 1)[0];\n      // EventBus에서 filterUpdate 값 제거\n      if (removedButton) {\n        eventbus.SearchResultEvent.dispatch('filterUpdateRemoved', removedButton);\n      }\n    };\n\n    // 이벤트 리스너 등록\n    onMounted(() => {\n      eventbus.SearchResultEvent.add('filterUpdate', updateButtonData);\n      eventbus.SearchResultEvent.add('resetButtons', resetButtons);\n    });\n    const __returned__ = {\n      buttons,\n      updateButtonData,\n      resetButtons,\n      removeButton,\n      ref,\n      onMounted,\n      watch,\n      get eventbus() {\n        return eventbus;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","watch","eventbus","buttons","updateButtonData","type","filter","value","push","resetButtons","removeButton","index","removedButton","splice","SearchResultEvent","dispatch","add"],"sources":["C:/Users/User/.intelij/payinfo/frontend/src/components/common/SearchFilterBtnComponent.vue"],"sourcesContent":["<script setup>\nimport {ref, onMounted, watch} from 'vue';\nimport eventbus from '@/eventbus/eventbus';\n\nconst buttons = ref([]);\n\nconst updateButtonData = (type, filter) => {\n  buttons.value.push({type, filter});\n};\n\nconst resetButtons = () => {\n  buttons.value = [];\n};\n\nconst removeButton = (index) => {\n  // 해당 버튼 삭제\n  const removedButton = buttons.value.splice(index, 1)[0];\n  // EventBus에서 filterUpdate 값 제거\n  if (removedButton) {\n    eventbus.SearchResultEvent.dispatch('filterUpdateRemoved', removedButton);\n  }\n};\n\n// 이벤트 리스너 등록\nonMounted(() => {\n  eventbus.SearchResultEvent.add('filterUpdate', updateButtonData);\n  eventbus.SearchResultEvent.add('resetButtons', resetButtons);\n});\n</script>\n\n<template>\n  <div>\n    <button v-for=\"(button, index) in buttons\" :key=\"index\" class=\"btn filterBtn\">\n      {{ button.type }}: {{ button.filter }}\n      <span class=\"remove-btn\" @click.stop=\"removeButton(index)\">X</span>\n    </button>\n  </div>\n</template>\n\n<style scoped>\n.filterBtn {\n  background-color: white;\n  border-radius: 20px;\n  margin: 5px;\n  border: 1px solid #b4c7dd;\n  position: relative; /* 상대 위치로 설정 */\n  padding-right: 20px; /* X 버튼 공간 확보 */\n}\n\n.remove-btn {\n  position: absolute; /* 절대 위치로 설정 */\n  right: 5px; /* 오른쪽 여백 */\n  top: 50%; /* 수직 중앙 정렬 */\n  transform: translateY(-50%); /* 중앙 정렬 보정 */\n  cursor: pointer; /* 커서 모양 변경 */\n  color: red; /* X 버튼 색상 */\n}\n</style>"],"mappings":";AACA,SAAQA,GAAG,EAAEC,SAAS,EAAEC,KAAK,QAAO,KAAK;AACzC,OAAOC,QAAQ,MAAM,qBAAqB;;;;;;;IAE1C,MAAMC,OAAO,GAAGJ,GAAG,CAAC,EAAE,CAAC;IAEvB,MAAMK,gBAAgB,GAAGA,CAACC,IAAI,EAAEC,MAAM,KAAK;MACzCH,OAAO,CAACI,KAAK,CAACC,IAAI,CAAC;QAACH,IAAI;QAAEC;MAAM,CAAC,CAAC;IACpC,CAAC;IAED,MAAMG,YAAY,GAAGA,CAAA,KAAM;MACzBN,OAAO,CAACI,KAAK,GAAG,EAAE;IACpB,CAAC;IAED,MAAMG,YAAY,GAAIC,KAAK,IAAK;MAC9B;MACA,MAAMC,aAAa,GAAGT,OAAO,CAACI,KAAK,CAACM,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;MACvD;MACA,IAAIC,aAAa,EAAE;QACjBV,QAAQ,CAACY,iBAAiB,CAACC,QAAQ,CAAC,qBAAqB,EAAEH,aAAa,CAAC;MAC3E;IACF,CAAC;;IAED;IACAZ,SAAS,CAAC,MAAM;MACdE,QAAQ,CAACY,iBAAiB,CAACE,GAAG,CAAC,cAAc,EAAEZ,gBAAgB,CAAC;MAChEF,QAAQ,CAACY,iBAAiB,CAACE,GAAG,CAAC,cAAc,EAAEP,YAAY,CAAC;IAC9D,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}