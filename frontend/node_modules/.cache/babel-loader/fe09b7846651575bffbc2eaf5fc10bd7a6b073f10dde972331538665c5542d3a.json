{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"ag-theme-quartz search-result\",\n  style: {\n    \"width\": \"100%\",\n    \"height\": \"90%\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ag_grid_vue = _resolveComponent(\"ag-grid-vue\");\n  const _component_DeleteRowDataBtnComponent = _resolveComponent(\"DeleteRowDataBtnComponent\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_ag_grid_vue, {\n    style: {\n      \"width\": \"100%\",\n      \"height\": \"100%\"\n    },\n    columnDefs: _ctx.columnDefs,\n    onGridReady: _ctx.onGridReady,\n    defaultColDef: _ctx.defaultColDef,\n    rowSelection: _ctx.rowSelection,\n    rowData: _ctx.rowData,\n    \"grid-options\": _ctx.gridOptions,\n    pagination: true,\n    onCellValueChanged: _ctx.onCellValueChanged\n  }, null, 8 /* PROPS */, [\"columnDefs\", \"onGridReady\", \"defaultColDef\", \"rowSelection\", \"rowData\", \"grid-options\", \"onCellValueChanged\"]), _createVNode(_component_DeleteRowDataBtnComponent, {\n    onRemove: _ctx.removeSelectedRows\n  }, null, 8 /* PROPS */, [\"onRemove\"])]);\n}","map":{"version":3,"names":["class","style","_createElementBlock","_hoisted_1","_createVNode","_component_ag_grid_vue","columnDefs","_ctx","onGridReady","defaultColDef","rowSelection","rowData","gridOptions","pagination","onCellValueChanged","_component_DeleteRowDataBtnComponent","onRemove","removeSelectedRows"],"sources":["C:\\Users\\손승연\\IdeaProjects\\payinfo\\frontend\\src\\components\\DevInq\\SearchResultComponent.vue"],"sourcesContent":["<template>\r\n  <div class=\"ag-theme-quartz search-result\" style=\"width: 100%; height: 90%;\">\r\n    <ag-grid-vue\r\n        style=\"width: 100%; height: 100%;\"\r\n        :columnDefs=\"columnDefs\"\r\n        @grid-ready=\"onGridReady\"\r\n        :defaultColDef=\"defaultColDef\"\r\n        :rowSelection=\"rowSelection\"\r\n        :rowData=\"rowData\"\r\n        :grid-options=\"gridOptions\"\r\n        :pagination=\"true\"\r\n        @cell-value-changed=\"onCellValueChanged\"\r\n    />\r\n    <DeleteRowDataBtnComponent @remove=\"removeSelectedRows\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent, ref, shallowRef } from \"vue\";\r\nimport { AgGridVue } from \"ag-grid-vue3\";\r\nimport \"ag-grid-community/styles/ag-grid.css\";\r\nimport \"ag-grid-community/styles/ag-theme-quartz.css\";\r\n\r\nexport default defineComponent({\r\n  components: {\r\n    \"ag-grid-vue\": AgGridVue,\r\n  },\r\n  setup() {\r\n    const columnDefs = ref([\r\n      { headerName: '개발자번호', field: \"DEV_NO\", minWidth: 170, checkboxSelection: true, headerCheckboxSelection: true },\r\n      { headerName: '이름', field: \"NM\" },\r\n      { headerName: '프로젝트투입상태', field: \"PJ_INP_STTS\" },\r\n      { headerName: '계약횟수', field: \"CTRT_NMTM\" },\r\n      { headerName: '생년월일', field: \"BRDT\" },\r\n      { headerName: '성별', field: \"GNDR\" },\r\n      { headerName: '직위', field: \"JBPS\" },\r\n      { headerName: '등급', field: \"GRD\" },\r\n      { headerName: '총경력기간', field: \"T_CR_PER\" },\r\n      { headerName: '지역', field: \"RGN\" },\r\n      { headerName: '휴대전화번호', field: \"MBL_TELNO\" },\r\n      { headerName: '이메일', field: \"EML\" },\r\n      { headerName: '컨택방법', field: \"CONTT_MTHD\" },\r\n      { headerName: '인터뷰요청일', field: \"NTRV_DMND_DT\" },\r\n      { headerName: '투입가능일', field: \"INP_PSBLTY_DT\" },\r\n      { headerName: '소속회사', field: \"OGDP_CO\" },\r\n      { headerName: '일련번호', field: \"SN\" },\r\n      { headerName: '3.3%여부', field: \"WHTAX_YN\" },\r\n      { headerName: '사업자여부', field: \"BZMN_YN\" },\r\n      { headerName: '자사정규직여부', field: \"KDS_EMP_YN\" },\r\n      { headerName: '계약회사정규직여부', field: \"CTRT_CO_EMP_YN\" },\r\n      { headerName: '대금수령날짜', field: \"CLCT_PICKUP_DT\" },\r\n      { headerName: '지급일자', field: \"GIVE_DT\" },\r\n      { headerName: '은행', field: \"BANK\" },\r\n      { headerName: '계좌번호', field: \"ACTNO\" },\r\n      { headerName: '부서', field: \"DEPT\" },\r\n      { headerName: '월요청단가', field: \"MM_DMND_UNTPRC\" },\r\n      { headerName: '주소', field: \"ADDR\" },\r\n      { headerName: '직책', field: \"JBTTL\" },\r\n      { headerName: '소개자', field: \"BRKR\" },\r\n      { headerName: '카카오톡닉네임', field: \"KAKAO_NICK\" },\r\n      { headerName: '계약이력존재여부', field: \"CTRT_HSTRY_YN\" },\r\n      { headerName: '병역', field: \"MS\" },\r\n    ]);\r\n\r\n    const gridApi = shallowRef();\r\n    const defaultColDef = ref({\r\n      editable: true,\r\n      filter: true,\r\n      flex: 1,\r\n    });\r\n    const rowSelection = ref(\"multiple\");\r\n    const rowData = ref([]);\r\n\r\n    const gridOptions = {\r\n      autoSizeStrategy: {\r\n        type: 'fitCellContents',\r\n      },\r\n      // 다른 그리드 옵션들...\r\n    };\r\n\r\n    const onGridReady = async (params) => {\r\n      gridApi.value = params.api; // api를 gridApi에 저장\r\n      rowData.value = await fetchData(); // fetchData의 반환 값을 rowData에 할당\r\n      gridApi.value.refreshCells(); // 셀 업데이트\r\n    };\r\n\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:8080/api/data');\r\n        const data = await response.json();\r\n\r\n        const translatedData = data.result.row.map(item => ({\r\n          DEV_NO: item.DEV_NO, // 개발자번호\r\n          NM: item.NM, // 이름\r\n          PJ_INP_STTS: item.PJ_INP_STTS, // 프로젝트투입상태\r\n          CTRT_NMTM: item.CTRT_NMTM, // 계약횟수\r\n          BRDT: item.BRDT, // 생년월일\r\n          GNDR: item.GNDR, // 성별\r\n          JBPS: item.JBPS, // 직위\r\n          GRD: item.GRD, // 등급\r\n          T_CR_PER: item.T_CR_PER, // 총경력기간\r\n          RGN: item.RGN, // 지역\r\n          MBL_TELNO: item.MBL_TELNO, // 휴대전화번호\r\n          EML: item.EML, // 이메일\r\n          CONTT_MTHD: item.CONTT_MTHD, // 컨택방법\r\n          NTRV_DMND_DT: item.NTRV_DMND_DT, // 인터뷰요청일\r\n          INP_PSBLTY_DT: item.INP_PSBLTY_DT, // 투입가능일\r\n          OGDP_CO: item.OGDP_CO, // 소속회사\r\n          SN: item.SN, // 일련번호\r\n          WHTAX_YN: item.WHTAX_YN, // 3.3%여부\r\n          BZMN_YN: item.BZMN_YN, // 사업자여부\r\n          KDS_EMP_YN: item.KDS_EMP_YN, // 자사정규직여부\r\n          CTRT_CO_EMP_YN: item.CTRT_CO_EMP_YN, // 계약회사정규직여부\r\n          CLCT_PICKUP_DT: item.CLCT_PICKUP_DT, // 대금수령날짜\r\n          GIVE_DT: item.GIVE_DT, // 지급일자\r\n          BANK: item.BANK, // 은행\r\n          ACTNO: item.ACTNO, // 계좌번호\r\n          DEPT: item.DEPT, // 부서\r\n          MM_DMND_UNTPRC: item.MM_DMND_UNTPRC, // 월요청단가\r\n          ADDR: item.ADDR, // 주소\r\n          JBTTL: item.JBTTL, // 직책\r\n          BRKR: item.BRKR, // 소개자\r\n          KAKAO_NICK: item.KAKAO_NICK, // 카카오톡닉네임\r\n          CTRT_HSTRY_YN: item.CTRT_HSTRY_YN, // 계약이력존재여부\r\n          MS: item.MS, // 병역\r\n        }));\r\n\r\n        return translatedData; // 변환된 데이터를 반환\r\n      } catch (error) {\r\n        console.error('데이터 로드 오류:', error);\r\n        return []; // 오류 발생 시 빈 배열 반환\r\n      }\r\n    };\r\n\r\n    // 셀의 값이 변경될 때 호출되는 함수\r\n    const onCellValueChanged = async (event) => {\r\n      console.log(event.data)\r\n\r\n      try {\r\n        const response = await fetch('http://localhost:8080/api/updateData', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(event.data),\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Failed to update data');\r\n        }\r\n\r\n        const result = await response.json();\r\n        console.log(result.message);\r\n      } catch (error) {\r\n        console.error('Error updating data:', error);\r\n      }\r\n    };\r\n\r\n    return {\r\n      columnDefs,\r\n      gridApi,\r\n      defaultColDef,\r\n      rowSelection,\r\n      rowData,\r\n      gridOptions,\r\n      onGridReady,\r\n      onCellValueChanged, // 이벤트 핸들러 반환\r\n    };\r\n  },\r\n});\r\n</script>\r\n\r\n<style>\r\n@import \"ag-grid-community/styles/ag-grid.css\";\r\n@import \"ag-grid-community/styles/ag-theme-quartz.css\";\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC,+BAA+B;EAACC,KAAiC,EAAjC;IAAA;IAAA;EAAA;;;;;uBAA3CC,mBAAA,CAaM,OAbNC,UAaM,GAZJC,YAAA,CAUEC,sBAAA;IATEJ,KAAkC,EAAlC;MAAA;MAAA;IAAA,CAAkC;IACjCK,UAAU,EAAEC,IAAA,CAAAD,UAAU;IACtBE,WAAU,EAAED,IAAA,CAAAC,WAAW;IACvBC,aAAa,EAAEF,IAAA,CAAAE,aAAa;IAC5BC,YAAY,EAAEH,IAAA,CAAAG,YAAY;IAC1BC,OAAO,EAAEJ,IAAA,CAAAI,OAAO;IAChB,cAAY,EAAEJ,IAAA,CAAAK,WAAW;IACzBC,UAAU,EAAE,IAAI;IAChBC,kBAAkB,EAAEP,IAAA,CAAAO;4IAEzBV,YAAA,CAA0DW,oCAAA;IAA9BC,QAAM,EAAET,IAAA,CAAAU;EAAkB,sC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}